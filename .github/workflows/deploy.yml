name: Deploy Laravel Application (Incremental Update)

on:
  # Triggers the workflow on pushes to the main branch
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: 1. Checkout Code
        uses: actions/checkout@v4
        # Downloads your code.

      # 2️⃣ Setup PHP
      - name: 2. Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2' # Ensure this matches your Hostinger PHP version
          extensions: mbstring, pdo_mysql, dom, bcmath, curl
          tools: composer

      # 3️⃣ Install PHP Dependencies (Creates the 'vendor' folder on the runner)
      - name: 3. Install Composer packages
        run: composer install --no-dev --prefer-dist --optimize-autoloader
        # The 'vendor' folder is built locally and ready to be transferred/synced.

      # 4️⃣ Setup Node.js
      - name: 4. Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 5️⃣ Install npm dependencies
      - name: 5. Install npm packages
        run: npm ci
        working-directory: ./frontend 

      # 6️⃣ Build frontend (Creates assets, usually in 'public/build' or 'public/dist')
      - name: 6. Build frontend Assets
        run: npm run build
        working-directory: ./frontend 

      # 7️⃣ Full Deployment via SCP (The FIX for file transfer)
      - name: 7. Deploy Updated Files via SCP & Run Post-Deployment Commands
        # Use scp-action for reliable file transfer
        uses: appleboy/scp-action@master
        with:
        # --- Connection Details (Use your SFTP secrets) ---
         host: ${{ secrets.SFTP_HOST }} 
         username: ${{ secrets.SFTP_USER }}
         key: ${{ secrets.SFTP_PRIVATE_KEY }}
         port: ${{ secrets.SFTP_PORT }}

        # --- File Synchronization (SCP Transfer) ---
       # CRITICAL: Transfer the entire repository root to the application root.
       # SCP respects your .gitignore for files like .env, preventing overwrite.
        source: "./" 
        target: "~/public_html/laravel/" 
        overwrite: true 

    # 8️⃣ Post-Deployment Commands (MUST be a separate SSH step)
      - name: 8. Run Post-Deployment Commands (Cache Clear)
      # Use ssh-action ONLY for running remote commands
        uses: appleboy/ssh-action@v0.1.10
         with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USER }}
          key: ${{ secrets.SFTP_PRIVATE_KEY }}
          port: ${{ secrets.SFTP_PORT }}
    
     script: |
      echo "--- Starting Post-Deployment Cleanup on Hostinger ---"            
      # 1. Navigate to the Laravel application root
      cd ~/public_html/laravel/
      
      # 2. CLEAR CACHES (This is why your code wasn't updating)
      # config:clear, cache:clear, and view:clear are essential.
      php artisan config:clear
      php artisan cache:clear
      php artisan view:clear
      
      # 3. STORAGE LINK FIX (Remove the storage:link command that was failing)
      # If you use storage, you must manually copy files or find an alternative solution.
      
      # 4. Verification command (Optional, keep it simple)
      ls -la ~/public_html/laravel/app/Http/Controllers/Controller.php

      echo "--- Deployment Complete! ---"
