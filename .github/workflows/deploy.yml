name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # ----------------------------------------------------
  # 1. BUILD PHASE
  # ----------------------------------------------------
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout Code
        uses: actions/checkout@v4

      - name: 2. Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_mysql, dom, bcmath, curl
          tools: composer

      - name: 3. Install Composer packages
        run: composer install --no-dev --prefer-dist --optimize-autoloader

      - name: 4. Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: 5. Install npm packages
        run: npm ci
        working-directory: ./frontend 

      - name: 6. Build frontend Assets
        run: npm run build
        working-directory: ./frontend
        
      # ðŸ‘‡ CRITICAL FIX: Move the built assets into the Laravel public folder
      - name: 7. Copy Frontend Assets to Public
        # The 'frontend/dist' directory contains the compiled index.html, assets/, etc.
        # We copy its *contents* directly into the repository's 'public/' directory.
        run: cp -R frontend/dist/* public/  
        
      # Archive the built files for the next job
      - name: 8. Archive Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deployment-package
          path: |
            ./*
            !./node_modules
            !./frontend/node_modules

  # ----------------------------------------------------
  # 2. DEPLOY PHASE (Requires successful build)
  # ----------------------------------------------------
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      # 1. Download the built files
      - name: 1. Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: deployment-package
          path: .

      # 2. FILE TRANSFER (The FIX: Use SCP for source/target)
      - name: 2. Deploy Updated Files via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SFTP_HOST }} 
          username: ${{ secrets.SFTP_USER }}
          key: ${{ secrets.SFTP_PRIVATE_KEY }}
          port: ${{ secrets.SFTP_PORT }}

          # CRITICAL: This is the only way to reliably transfer all files.
          source: "./"
          target: "~/public_html/laravel/"
          overwrite: true # Forces overwrite of files

      # 3. RUN REMOTE COMMANDS (Clear Cache & Verify)
      - name: 3. Run Post-Deployment Commands
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USER }}
          key: ${{ secrets.SFTP_PRIVATE_KEY }}
          port: ${{ secrets.SFTP_PORT }}
          
          script: |
            echo "--- Starting Post-Deployment Cleanup on Hostinger ---"            
            
            # 1. Navigate to the Laravel application root
            cd ~/public_html/laravel/
            
            # 2. CLEAR CACHES (Essential)
            php artisan config:clear
            php artisan cache:clear
            php artisan view:clear
            
            # 3. Verification command (The file MUST show a current timestamp)
            echo "=== Final verification timestamp ==="
            ls -la ~/public_html/laravel/app/Http/Controllers/Controller.php

            echo "--- Deployment Complete! ---"
